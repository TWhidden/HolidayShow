#pragma warning disable 1591
#pragma warning disable 0414        
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Linq;

namespace HolidayShow.Data
{
    /// <summary>
    /// The class representing the dbo.DevicePatterns table.
    /// </summary>
    [System.Data.Linq.Mapping.Table(Name="dbo.DevicePatterns")]
    [System.Runtime.Serialization.DataContract(IsReference = true)]
    [System.ComponentModel.DataAnnotations.ScaffoldTable(true)]
    [System.ComponentModel.DataAnnotations.MetadataType(typeof(HolidayShow.Data.DevicePatterns.Metadata))]
    [System.Data.Services.Common.DataServiceKey("DevicePatternId")]
    [System.Diagnostics.DebuggerDisplay("DevicePatternId: {DevicePatternId}")]
    public partial class DevicePatterns
        : LinqEntityBase, ICloneable 
    {
        #region Static Constructor
        /// <summary>
        /// Initializes the <see cref="DevicePatterns"/> class.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        static DevicePatterns()
        {
            AddSharedRules();
        }
        #endregion

        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="DevicePatterns"/> class.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public DevicePatterns()
        {
            Initialize();
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private void Initialize()
        {
            _devices = default(System.Data.Linq.EntityRef<Devices>);
            _devicePatternSequencesList = new System.Data.Linq.EntitySet<DevicePatternSequences>(OnDevicePatternSequencesListAdd, OnDevicePatternSequencesListRemove);
            _setSequencesList = new System.Data.Linq.EntitySet<SetSequences>(OnSetSequencesListAdd, OnSetSequencesListRemove);
            OnCreated();
        }
        #endregion

        #region Column Mapped Properties

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private int _devicePatternId = default(int);

        /// <summary>
        /// Gets the DevicePatternId column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "DevicePatternId", Storage = "_devicePatternId", DbType = "int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true, CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 1)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public int DevicePatternId
        {
            get { return _devicePatternId; }
            set
            {
                if (_devicePatternId != value)
                {
                    OnDevicePatternIdChanging(value);
                    SendPropertyChanging("DevicePatternId");
                    _devicePatternId = value;
                    SendPropertyChanged("DevicePatternId");
                    OnDevicePatternIdChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private int _deviceId;

        /// <summary>
        /// Gets or sets the DeviceId column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "DeviceId", Storage = "_deviceId", DbType = "int NOT NULL", CanBeNull = false, UpdateCheck = System.Data.Linq.Mapping.UpdateCheck.Never)]
        [System.Runtime.Serialization.DataMember(Order = 2)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public int DeviceId
        {
            get { return _deviceId; }
            set
            {
                if (_deviceId != value)
                {
                    if (_devices.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    OnDeviceIdChanging(value);
                    SendPropertyChanging("DeviceId");
                    _deviceId = value;
                    SendPropertyChanged("DeviceId");
                    OnDeviceIdChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private string _patternName;

        /// <summary>
        /// Gets or sets the PatternName column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "PatternName", Storage = "_patternName", DbType = "nvarchar(50) NOT NULL", CanBeNull = false, UpdateCheck = System.Data.Linq.Mapping.UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        [System.Runtime.Serialization.DataMember(Order = 3)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public string PatternName
        {
            get { return _patternName; }
            set
            {
                if (_patternName != value)
                {
                    OnPatternNameChanging(value);
                    SendPropertyChanging("PatternName");
                    _patternName = value;
                    SendPropertyChanged("PatternName");
                    OnPatternNameChanged();
                }
            }
        }
        #endregion

        #region Association Mapped Properties

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private System.Data.Linq.EntityRef<Devices> _devices;

        /// <summary>
        /// Gets or sets the <see cref="Devices"/> association.
        /// </summary>
        [System.Data.Linq.Mapping.Association(Name = "Devices_DevicePatterns", Storage = "_devices", ThisKey = "DeviceId", OtherKey = "DeviceId", IsForeignKey = true, DeleteRule = "CASCADE")]
        [System.Runtime.Serialization.DataMember(Order = 4, EmitDefaultValue = false)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public Devices Devices
        {
            get { return (serializing && !_devices.HasLoadedOrAssignedValue) ? null : _devices.Entity; }
            set
            {
                Devices previousValue = _devices.Entity;
                if (previousValue != value || _devices.HasLoadedOrAssignedValue == false)
                {
                    OnDevicesChanging(value);
                    SendPropertyChanging("Devices");
                    if (previousValue != null)
                    {
                        _devices.Entity = null;
                        previousValue.DevicePatternsList.Remove(this);
                    }
                    _devices.Entity = value;
                    if (value != null)
                    {
                        value.DevicePatternsList.Add(this);
                        _deviceId = value.DeviceId;
                    }
                    else
                    {
                        _deviceId = default(int);
                    }
                    SendPropertyChanged("Devices");
                    OnDevicesChanged();
                }
            }
        }
        
        
        

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private System.Data.Linq.EntitySet<DevicePatternSequences> _devicePatternSequencesList;

        /// <summary>
        /// Gets or sets the <see cref="DevicePatternSequences"/> association.
        /// </summary>
        [System.Data.Linq.Mapping.Association(Name = "DevicePatterns_DevicePatternSequences", Storage = "_devicePatternSequencesList", ThisKey = "DevicePatternId", OtherKey = "DevicePatternId")]
        [System.Runtime.Serialization.DataMember(Order=5, EmitDefaultValue=false)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.EntitySet<DevicePatternSequences> DevicePatternSequencesList
        {
            get { return (serializing && !_devicePatternSequencesList.HasLoadedOrAssignedValues) ? null : _devicePatternSequencesList; }
            set { _devicePatternSequencesList.Assign(value); }
        }
        
        

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private void OnDevicePatternSequencesListAdd(DevicePatternSequences entity)
        {
            SendPropertyChanging(null);
            entity.DevicePatterns = this;
            SendPropertyChanged(null);
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private void OnDevicePatternSequencesListRemove(DevicePatternSequences entity)
        {
            SendPropertyChanging(null);
            entity.DevicePatterns = null;
            SendPropertyChanged(null);
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private System.Data.Linq.EntitySet<SetSequences> _setSequencesList;

        /// <summary>
        /// Gets or sets the <see cref="SetSequences"/> association.
        /// </summary>
        [System.Data.Linq.Mapping.Association(Name = "DevicePatterns_SetSequences", Storage = "_setSequencesList", ThisKey = "DevicePatternId", OtherKey = "DevicePatternId")]
        [System.Runtime.Serialization.DataMember(Order=6, EmitDefaultValue=false)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.EntitySet<SetSequences> SetSequencesList
        {
            get { return (serializing && !_setSequencesList.HasLoadedOrAssignedValues) ? null : _setSequencesList; }
            set { _setSequencesList.Assign(value); }
        }
        
        

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private void OnSetSequencesListAdd(SetSequences entity)
        {
            SendPropertyChanging(null);
            entity.DevicePatterns = this;
            SendPropertyChanged(null);
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private void OnSetSequencesListRemove(SetSequences entity)
        {
            SendPropertyChanging(null);
            entity.DevicePatterns = null;
            SendPropertyChanged(null);
        }
        #endregion

        #region Extensibility Method Definitions
        /// <summary>Called by the static constructor to add shared rules.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        static partial void AddSharedRules();
        /// <summary>Called when this instance is loaded.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnCreated();
        /// <summary>Called when <see cref="DevicePatternId"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnDevicePatternIdChanging(int value);
        /// <summary>Called after <see cref="DevicePatternId"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnDevicePatternIdChanged();
        /// <summary>Called when <see cref="DeviceId"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnDeviceIdChanging(int value);
        /// <summary>Called after <see cref="DeviceId"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnDeviceIdChanged();
        /// <summary>Called when <see cref="PatternName"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnPatternNameChanging(string value);
        /// <summary>Called after <see cref="PatternName"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnPatternNameChanged();
        /// <summary>Called when <see cref="Devices"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnDevicesChanging(Devices value);
        /// <summary>Called after <see cref="Devices"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnDevicesChanged();

        #endregion

        #region Serialization
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private bool serializing;

        /// <summary>
        /// Called when serializing.
        /// </summary>
        /// <param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> for the serialization.</param>
        [System.Runtime.Serialization.OnSerializing]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public void OnSerializing(System.Runtime.Serialization.StreamingContext context) {
            serializing = true;
        }

        /// <summary>
        /// Called when serialized.
        /// </summary>
        /// <param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> for the serialization.</param>
        [System.Runtime.Serialization.OnSerialized]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public void OnSerialized(System.Runtime.Serialization.StreamingContext context) {
            serializing = false;
        }

        /// <summary>
        /// Called when deserializing.
        /// </summary>
        /// <param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> for the serialization.</param>
        [System.Runtime.Serialization.OnDeserializing]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public void OnDeserializing(System.Runtime.Serialization.StreamingContext context) {
            Initialize();
        }

        /// <summary>
        /// Deserializes an instance of <see cref="DevicePatterns"/> from XML.
        /// </summary>
        /// <param name="xml">The XML string representing a <see cref="DevicePatterns"/> instance.</param>
        /// <returns>An instance of <see cref="DevicePatterns"/> that is deserialized from the XML string.</returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public static DevicePatterns FromXml(string xml)
        {
            var deserializer = new System.Runtime.Serialization.DataContractSerializer(typeof(DevicePatterns));

            using (var sr = new System.IO.StringReader(xml))
            using (var reader = System.Xml.XmlReader.Create(sr))
            {
                return deserializer.ReadObject(reader) as DevicePatterns;
            }
        }

        /// <summary>
        /// Deserializes an instance of <see cref="DevicePatterns"/> from a byte array.
        /// </summary>
        /// <param name="buffer">The byte array representing a <see cref="DevicePatterns"/> instance.</param>
        /// <returns>An instance of <see cref="DevicePatterns"/> that is deserialized from the byte array.</returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public static DevicePatterns FromBinary(byte[] buffer)
        {
            var deserializer = new System.Runtime.Serialization.DataContractSerializer(typeof(DevicePatterns));

            using (var ms = new System.IO.MemoryStream(buffer))
            using (var reader = System.Xml.XmlDictionaryReader.CreateBinaryReader(ms, System.Xml.XmlDictionaryReaderQuotas.Max))
            {
                return deserializer.ReadObject(reader) as DevicePatterns;
            }
        }
        
        #endregion

        #region Clone
        /// <summary>
        /// Creates a new object that is a copy of the current instance.
        /// </summary>
        /// <returns>
        /// A new object that is a copy of this instance.
        /// </returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        object ICloneable.Clone()
        {
            var serializer = new System.Runtime.Serialization.DataContractSerializer(GetType());
            using (var ms = new System.IO.MemoryStream())
            {
                serializer.WriteObject(ms, this);
                ms.Position = 0;
                return serializer.ReadObject(ms);
            }
        }

        /// <summary>
        /// Creates a new object that is a copy of the current instance.
        /// </summary>
        /// <returns>
        /// A new object that is a copy of this instance.
        /// </returns>
        /// <remarks>
        /// Only loaded <see cref="T:System.Data.Linq.EntityRef`1"/> and <see cref="T:System.Data.Linq.EntitySet`1" /> child accessions will be cloned.
        /// </remarks>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public DevicePatterns Clone()
        {
            return (DevicePatterns)((ICloneable)this).Clone();
        }
        #endregion

        #region Detach Methods
        /// <summary>
        /// Detach this instance from the <see cref="System.Data.Linq.DataContext"/>.
        /// </summary>
        /// <remarks>
        /// Detaching the entity will stop all lazy loading and allow it to be added to another <see cref="System.Data.Linq.DataContext"/>.
        /// </remarks>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public override void Detach()
        {
            if (!IsAttached())
                return;

            base.Detach();
            _devices = Detach(_devices);
            _devicePatternSequencesList = Detach(_devicePatternSequencesList, OnDevicePatternSequencesListAdd, OnDevicePatternSequencesListRemove);
            _setSequencesList = Detach(_setSequencesList, OnSetSequencesListAdd, OnSetSequencesListRemove);
        }
        #endregion
    }
}
#pragma warning restore 1591
#pragma warning restore 0414
