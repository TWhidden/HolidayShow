<%@ CodeTemplate Language="VB" TargetLanguage="VB" Debug="True" Encoding="UTF-8"
    Description="Linq to Sql DataManager Class." %>

<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="Dbml" Path="..\..\Common" %>
<%@ Assembly Name="Generator" Path="..\..\Common" %>
<%@ Assembly Src="Manager.vb" %>

<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="LinqToSqlShared.DbmlObjectModel" %>
<%@ Import Namespace="Manager" %>

<%@ Property Category="3.Manager" Name="ManagerNamespace" 
    Type="System.String" Optional="False" 
    Description="The namespace to use for the generated manager class files."%>

<%@ Property Category="3.Manager" Name="DataManager" 
    Type="Manager.DataManager" Optional="False" 
    Description="DatabaseMapping instance. Must be set by parent template" %>

<%@ Property Category="1.Mapping" Name="Database" 
    Type="LinqToSqlShared.DbmlObjectModel.Database" Optional="False" 
    Description="Database instance. Must be set by parent template" %>

<%@ Map Name="VBKeywordEscape"
    Src="VBKeywordEscape.csmap" Reverse="False"
    Description="Mapping to escape c# keywords" %>

'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a CodeSmith Template.
'
'     DO NOT MODIFY contents of this file. Changes to this
'     file will be lost if the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Imports System
Imports System.ComponentModel

Namespace <%= ManagerNamespace %>
    ''' <summary>
    ''' The data manager for a DataContext.
    ''' </summary>
    Public Class <%= DataManager.DataManagerName %>
        Inherits CodeSmith.Data.DataManagerBase(Of <%= Database.ContextNamespace %>.<%= DataManager.DataContextName %>)
        ''' <summary>
        ''' Initializes a new instance of the <see cref="<%= Database.ContextNamespace %>.<%= DataManager.DataManagerName %>"/> class.
        ''' </summary>
        ''' <param name="context">An instance of <see cref="<%= DataManager.DataContextName %>"/> DataContext.</param>
        Public Sub New(ByVal context As <%= Database.ContextNamespace %>.<%= DataManager.DataContextName %>)
            MyBase.New(context)
        End Sub
        #Region "Managers"
<% For Each m As EntityManager In DataManager.Managers %>
    <% Dim table As Table = Database.Tables(m.TableName) %>
        Private  <%= m.FieldName %> As <%= m.ManagerName %>

        ''' <summary>
        ''' Gets the manager for <%= VBKeywordEscape(m.PropertyName) %>.
        ''' </summary>
        <%= StringUtil.ToPascalCase(Naming.GetModifier(table.AccessModifier, table.Modifier)) %> ReadOnly Property <%= VBKeywordEscape(m.PropertyName) %> As <%= m.ManagerName %>
            Get
        If (<%= m.FieldName %> Is Nothing) Then
                    <%= m.FieldName %> = New <%= m.ManagerName %>(Me)
        End If

                Return <%= m.FieldName %>
            End Get
        End Property
<% Next %>
        #End Region
    End Class
End Namespace