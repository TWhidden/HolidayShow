<%@ CodeTemplate Language="VB" TargetLanguage="VB" Debug="True" Encoding="UTF-8"
    Description="Linq to Sql Entity Class." CompilerVersion="v3.5" %>

<%@ Assembly Name="ICSharpCode.NRefactory, Version=4.0.0.9999, Culture=neutral, PublicKeyToken=efe927acf176eea2, processorArchitecture=MSIL" Path="..\..\Common" %>
<%@ Assembly Name="CodeSmith.InsertClassMergeStrategy" Path="..\..\Common" %>
<%@ Assembly Name="CodeSmith.CodeParser" Path="..\..\Common" %>
<%@ Assembly Name="Generator" Path="..\..\Common" %>
<%@ Assembly Name="Dbml" Path="..\..\Common" %>

<%@ Import Namespace="System.Text" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="LinqToSqlShared.DbmlObjectModel" %>
<%@ Import Namespace="LinqToSqlShared.Generator" %>

<%@ Property Category="1.Mapping" Name="Database"
    Type="LinqToSqlShared.DbmlObjectModel.Database" Optional="False"
    Description="Database instance. Must be set by parent template" %>

<%@ Property Category="1.Mapping" Name="Type"
    Type="LinqToSqlShared.DbmlObjectModel.Type" Optional="False"
    Description="The Type instance for this entity. Must be set by parent template" %>
    
<%@ Property Category="1.Mapping" Name="TableName"
    Type="System.String" Default="" Optional="True"
    Description="The name of the table this class is mapped to." %>

<%@ Property Name="EnumDatabase"
    Type="LinqToSqlShared.Generator.DbmlEnum.Database" Optional="True"
    Description="Enum Collection for Database." %>
    
<%@ Property Category="2.Class" Name="IncludeXmlSerialization"
    Type="System.Boolean" Default="false" Optional="False"
    Description="Include Xml serialization support." %>

<%@ Property Category="2.Class" Name="InterfaceNamespace" 
    Type="System.String" Default="" Optional="True" 
    Description="The namespace for the interfaces.  Leave blank to not generate them." %>

<%@ Map Name="VbAlias"
    Src="System-VBAlias.csmap" Reverse="False"
    Description="Convert system data types to vb alias" %>
''------------------------------------------------------------------------------
'' <autogenerated>
''     This code was generated by a CodeSmith Template.
''
''     DO NOT MODIFY contents of this file. Changes to this
''     file will be lost if the code is regenerated.
'' </autogenerated>
''------------------------------------------------------------------------------
Imports System
Imports System.Linq

Namespace <%= Me.InterfaceNamespace %>

    ''' <summary>
<% If Not (String.IsNullOrEmpty(TableName)) Then %>
    ''' Interface representing the <%= TableName %> table.
<% Else %>
    ''' Interface representing <%= Type.Name %> data.
<% End If %>
    ''' </summary>
    <%= Naming.GetModifier(Type.AccessModifier, Type.Modifier) %> Interface I<%= Type.Name %>
<% For Each column As Column In Type.Columns
    Dim dataType As String = column.Type
    
    Dim useByteArray As Boolean = IncludeXmlSerialization AndAlso dataType.Equals("System.Data.Linq.Binary")
    If (useByteArray) Then
        dataType = "byte()"
    End If
        
	Dim enumType As LinqToSqlShared.Generator.DbmlEnum.Enum = If(EnumDatabase IsNot Nothing, EnumDatabase.Enums.FirstOrDefault(Function(e) e.Name = column.Type), Nothing)

	If column.IsDelayLoaded AndAlso column.IsPrimaryKey = False Then
		dataType = VbAlias(dataType)
	ElseIf column.CanBeNull = True AndAlso (CommonUtility.IsNullableType(dataType) OrElse enumType IsNot Nothing) Then
		dataType = String.Format("Nullable(Of {0})", VbAlias(dataType))
	Else
		dataType = VbAlias(dataType)
	End If
%>
        ''' <summary>
<% If (column.IsDbGenerated = False AndAlso column.IsReadOnly = false) Then %>
        ''' Gets or sets the <%= column.Name %> column value.
<% Else %>
        ''' Gets the <%= column.Name %> column value.
<% End If %>
        ''' </summary>
        <%= dataType %> <%=column.Member%> { get; <% If Not (column.IsReadOnly) Then %>set; <% End If %>}
<% Next %>
<% For Each association As Association in Type.EntityRefAssociations %>
        ''' <summary>
        ''' Gets or sets the <see cref="T:<%= Me.InterfaceNamespace %>.I<%= association.Type %>"/> association.
        ''' </summary>
        <%= Me.InterfaceNamespace %>.I<%= association.Type %> <%=association.Member%> { get; set; }
<% Next %>
<% For Each association As Association in Type.EntitySetAssociations %>
        ''' <summary>
        ''' Gets or sets the <see cref="T:<%= Me.InterfaceNamespace %>.I<%= association.Type %>"/> association.
        ''' </summary>
        System.Collections.Generic.IEnumerable<<%= Me.InterfaceNamespace %>.I<%= association.Type %>> <%=association.Member%> { get; set; }
<% Next %>
    End Interface
End Namespace

